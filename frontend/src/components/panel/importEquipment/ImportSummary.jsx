import { useMemo } from "react";
import { Button } from "@/components/ui/buttonn";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { toast } from "sonner";

export default function ImportSummary({
  selectedVendor,
  setSelectedVendor,
  selectedItems,
  setSelectedItems,
  vendorLatestPrices = {},
  checkedEquipmentId,
  onConfirm,
  isSuperAdmin,
  branchId,
}) {
  // L·∫•y danh s√°ch thi·∫øt b·ªã ƒë√£ ch·ªçn ƒë·ªÉ nh·∫≠p
  const rows = useMemo(() => Object.values(selectedItems || {}), [selectedItems]);

  // ‚ö° Update d·ªØ li·ªáu + ki·ªÉm tra kh√¥ng √¢m
  const updateField = (id, field, value) => {
    const num = Number(value);
    if (isNaN(num)) return;

    if (num < 0) {
      toast.warning("‚ö†Ô∏è Gi√° tr·ªã kh√¥ng ƒë∆∞·ª£c √¢m!");
      setSelectedItems((prev) => ({
        ...prev,
        [id]: { ...prev[id], [field]: 0 },
      }));
      return;
    }

    setSelectedItems((prev) => ({
      ...prev,
      [id]: { ...prev[id], [field]: num },
    }));
  };

  // T√≠nh t·ªïng ti·ªÅn
  const totalBeforeTax = rows.reduce((sum, r) => {
    const p = Number(r.price) || 0;
    const q = Number(r.qty) || 0;
    return sum + p * q;
  }, 0);
  const taxAmount = Math.round(totalBeforeTax * 0.08);
  const totalWithTax = totalBeforeTax + taxAmount;

  return (
    <div className="bg-white dark:bg-gray-800 p-5 rounded-xl border border-gray-200 dark:border-gray-700 shadow-sm space-y-4">
      <h3 className="text-lg font-semibold text-emerald-600">
        üì¶ T·ªïng h·ª£p & X√°c nh·∫≠n
      </h3>

      {/* Th√¥ng tin vendor & thi·∫øt b·ªã ƒëang ki·ªÉm */}
      <div className="grid md:grid-cols-3 gap-3 text-sm">
        <div className="p-3 rounded-lg border bg-gray-50 dark:bg-gray-700">
          <div className="text-gray-500">Thi·∫øt b·ªã ƒëang ki·ªÉm gi√°:</div>
          <div className="font-semibold">{checkedEquipmentId || "‚Äî"}</div>
        </div>
        <div className="p-3 rounded-lg border bg-gray-50 dark:bg-gray-700">
          <div className="text-gray-500">Vendor ƒëang ch·ªçn:</div>
          <div className="font-semibold">{selectedVendor || "‚Äî"}</div>
        </div>
        <div className="p-3 rounded-lg border bg-gray-50 dark:bg-gray-700">
          <div className="text-gray-500">Gi√° g·∫ßn nh·∫•t (vendor ƒë√£ ch·ªçn):</div>
          <div className="font-semibold">
            {selectedVendor && typeof vendorLatestPrices[selectedVendor] === "number"
              ? `${vendorLatestPrices[selectedVendor].toLocaleString("vi-VN")} ƒë`
              : "‚Äî"}
          </div>
        </div>
      </div>

      {/* Danh s√°ch d√≤ng thi·∫øt b·ªã ƒë∆∞·ª£c ch·ªçn */}
      {rows.length > 0 ? (
        <div className="space-y-3">
          {rows.map((item) => {
            const total = (Number(item.price) || 0) * (Number(item.qty) || 0);
            return (
              <div
                key={item.id}
                className="flex flex-col md:flex-row gap-4 border rounded-lg p-4 bg-gray-50 dark:bg-gray-700 transition hover:shadow-md"
              >
                <img
                  src={item.image}
                  alt={item.name}
                  className="w-40 h-32 object-contain rounded border bg-white dark:bg-gray-900"
                />

                <div className="flex-1 flex flex-col">
                  <div>
                    <p className="font-semibold text-gray-900 dark:text-gray-100">
                      {item.name}
                    </p>
                    <p className="text-xs text-gray-500 mb-2">M√£: {item.id}</p>
                  </div>

                  <div className="grid sm:grid-cols-3 gap-3">
                    <div>
                      <Label className="text-xs text-gray-400">Gi√° (VNƒê)</Label>
                      <Input
                        type="number"
                        value={item.price || ""}
                        onChange={(e) =>
                          updateField(item.id, "price", e.target.value)
                        }
                        placeholder="VD: 12000000"
                        className="h-8 text-sm"
                      />
                    </div>

                    <div>
                      <Label className="text-xs text-gray-400">S·ªë l∆∞·ª£ng</Label>
                      <Input
                        type="number"
                        value={item.qty || ""}
                        onChange={(e) => updateField(item.id, "qty", e.target.value)}
                        placeholder="VD: 2"
                        className="h-8 text-sm"
                      />
                    </div>

                    <div>
                      <Label className="text-xs text-gray-400">B·∫£o h√†nh (nƒÉm)</Label>
                      <Input
                        type="number"
                        value={item.warranty_duration || ""}
                        onChange={(e) =>
                          updateField(item.id, "warranty_duration", e.target.value)
                        }
                        placeholder="VD: 2"
                        className="h-8 text-sm"
                      />
                    </div>
                  </div>

                  <div className="text-red-600 font-semibold text-sm mt-2">
                    T·ªïng: {total.toLocaleString("vi-VN")} VNƒê
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      ) : (
        <div className="text-sm text-gray-500 italic">
          Ch∆∞a ch·ªçn d√≤ng thi·∫øt b·ªã n√†o.
        </div>
      )}

      {/* T·ªïng c·ªông v√† x√°c nh·∫≠n */}
      <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-3 p-3 rounded-lg border bg-gray-50 dark:bg-gray-700">
        <div className="space-y-1 text-sm">
          <div>
            T·ªïng (ch∆∞a thu·∫ø):{" "}
            <b>{totalBeforeTax.toLocaleString("vi-VN")} VNƒê</b>
          </div>
          <div>
            Thu·∫ø (8%): <b>{taxAmount.toLocaleString("vi-VN")} VNƒê</b>
          </div>
          <div className="text-emerald-600 font-bold text-base">
            T·ªïng c·ªông sau thu·∫ø: {totalWithTax.toLocaleString("vi-VN")} VNƒê
          </div>
        </div>

        <Button
          className="bg-gradient-to-r from-emerald-500 to-purple-500 hover:opacity-90 text-white font-semibold px-6 py-2 rounded-xl shadow-md transition"
          disabled={!rows.length}
          onClick={() =>
            onConfirm?.({
              selectedVendor,
              selectedItems,
              branchId,
            })
          }
        >
          Nh·∫≠p thi·∫øt b·ªã
        </Button>
      </div>
    </div>
  );
}
